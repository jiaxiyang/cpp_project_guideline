[project]
name = "cpp_project_guideline"
version = "0.1.0"
description = "C++ project guidelines"
authors = ["jiaxiyang <jiaxiyangbit@126.com>"]
channels = ["conda-forge", "bioconda", "nvidia", "pytorch"]
platforms = ["linux-64"]

[activation]
scripts = ["scripts/env_setup.sh"]

[tasks]
install = { cmd = "npm i cfonts -g && cfonts 'install'" }
format_check = { cmd = "cfonts 'format' && ./scripts/run-clang-format.py -r samples" }
cpplint = { cmd = "cfonts 'cpplint' && cpplint samples/*" }
base = { cmd = "cfonts 'examples' && bash -ex scripts/base.sh" }
gcovr = { cmd = "cfonts 'gcovr' && bash -ex scripts/base.sh -DCMAKE_CXX_FLAGS=\"-fprofile-arcs -ftest-coverage -g -O0\" && gcovr --decisions --txt && mkdir -p gcovr && gcovr --html-details gcovr/coverage.html" }
clang-tidy = { cmd = "cfonts 'tidy' && run-clang-tidy -p build/ -quiet -use-color", depends_on = [ "base" ] } # after build
all = { cmd = "pwd", depends_on = [
            "install",
            "format_check",
            "cpplint",
            "base",
            "clang-tidy",
            "gcovr"
        ]}

[dependencies]
cmake = "3.27.6.*"
glog = "0.6.0.*"
ninja = "1.11.1.*"
eigen = "3.4.0.*"
gcc = "13.2.0.*"
gxx = "13.2.0.*"
clang = "17.0.4.*"
clangxx = "17.0.4.*"
clang-format = "17.0.4.*"
nodejs = "20.9.0.*"
cpplint = "1.6.0.*"
python = ">3.9,<=3.11"
clang-tools = "17.0.4.*"
gcovr = "5.2.*"
